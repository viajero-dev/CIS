/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vg.scfc.financing.cis.ui.panel;

import com.vg.commons.dlg.WaitSplashScreen;
import com.vg.commons.listener.DoJasperPrintReport;
import com.vg.commons.renderer.CustomTableCellRenderer;
import com.vg.commons.util.UIMgr;
import com.vg.scfc.financing.cis.ent.Customer;
import com.vg.scfc.financing.cis.ent.PersonalInfo;
import com.vg.scfc.financing.cis.ent.TransactionForm;
import com.vg.scfc.financing.cis.ui.controller.PersonalInfoController;
import com.vg.scfc.financing.cis.ui.controller.ReportController;
import com.vg.scfc.financing.cis.ui.controller.SearchController;
import com.vg.scfc.financing.cis.ui.dialog.CAFReportDlg;
import com.vg.scfc.financing.cis.ui.settings.UISetting;
import com.vg.scfc.financing.cis.ui.validator.UIValidator;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JasperPrint;
import org.jdesktop.observablecollections.ObservableCollections;

/**
 *
 * @author rodel
 */
public class SearchPanelInstitution extends javax.swing.JPanel implements DoJasperPrintReport {

    /**
     * Creates new form SearchPanelInstitution
     */
    public SearchPanelInstitution() {
        initComponents();
        startUpSetUp();
        txtSearch.putClientProperty("Quaqua.TextField.style", "search");
        txtSearch.setText("Search");
    }

    private void startUpSetUp() {
        initCustomerTable();
        initTransactionFormTable();
//        refreshCustomerTable(SearchController.getInstance().findBySearchCriteriaLocationAndMode("", UISetting.getStoreLocation().getFinStartCode(), 3));
    }

    private void initCustomerTable() {
        tblCustomer.putClientProperty("Quaqua.Table.style", "striped");
        tblCustomer.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblCustomer.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent lse) {
                try {
                    selectedIndex = tblCustomer.getSelectedRow();
                    if (selectedIndex >= 0) {
                        Customer c = customers.get(selectedIndex);
                        if (c != null) {
                            setCustomer(c);
                        }
                    }
                } catch (Exception e) {
                    UIValidator.log(e, SearchPanel.class);
                }
            }
        });
    }

    private void initTransactionFormTable() {
        tblTransactionForm.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblTransactionForm.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent lse) {
                try {
                    selectedIndex = tblTransactionForm.getSelectedRow();
                    if (selectedIndex >= 0) {
                        TransactionForm f = transactionForms.get(selectedIndex);
                        if (f != null) {
                            setTransactionForm(f);
                        }
                    }
                } catch (Exception e) {
                    UIValidator.log(e, SearchPanel.class);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        customers = ObservableCollections.observableList(new LinkedList<Customer>());
        transactionForms = ObservableCollections.observableList(new LinkedList<TransactionForm>());
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTransactionForm = new javax.swing.JTable();
        btnPrintVersion = new javax.swing.JButton();
        lblRecordCount = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCustomer.setFont(new java.awt.Font("Monospaced", 1, 9)); // NOI18N
        tblCustomer.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, customers, tblCustomer);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientNo}"));
        columnBinding.setColumnName("Client #");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tblCustomer);
        tblCustomer.getColumnModel().getColumn(0).setPreferredWidth(70);
        tblCustomer.getColumnModel().getColumn(0).setMaxWidth(70);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 30, 250, 320));

        txtSearch.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 250, -1));

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, transactionForms, tblTransactionForm);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${txFormNo}"));
        columnBinding.setColumnName("Form #");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${txApplicationDate}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(tblTransactionForm);
        tblTransactionForm.getColumnModel().getColumn(1).setCellRenderer(new CustomTableCellRenderer(new SimpleDateFormat("yyyy-MM-hh")));

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 360, 250, 160));

        btnPrintVersion.setText("Print Report");
        btnPrintVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintVersionActionPerformed(evt);
            }
        });
        add(btnPrintVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 580, 250, -1));

        lblRecordCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRecordCount.setText("RECORD(S): 0");
        add(lblRecordCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 530, 220, -1));

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        refreshCustomerTable(SearchController.getInstance().findBySearchCriteriaLocationAndMode(txtSearch.getText(), UISetting.getStoreLocation().getFinStartCode(), 3));
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        txtSearch.setText(txtSearch.getText().toUpperCase());
    }//GEN-LAST:event_txtSearchFocusLost

    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        txtSearch.selectAll();
    }//GEN-LAST:event_txtSearchFocusGained

    private void btnPrintVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintVersionActionPerformed
        new WaitSplashScreen(null, true, this, "CREDIT APPLICATION FORM").getThisDlg();
    }//GEN-LAST:event_btnPrintVersionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrintVersion;
    private java.util.List<Customer> customers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblRecordCount;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTable tblTransactionForm;
    private java.util.List<TransactionForm> transactionForms;
    private javax.swing.JTextField txtSearch;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    private int selectedIndex = 0;
    private Customer customer;
    private TransactionForm transactionForm;
    private MainPanel mainPanel;
    private InstitutionalPanel institutionalPanel;

    public void setInstitutionalPanel(InstitutionalPanel institutionalPanel) {
        this.institutionalPanel = institutionalPanel;
    }

    public void setMainPanel(MainPanel mainPanel) {
        this.mainPanel = mainPanel;
    }

    public Customer getCustomer() {
        return customer;
    }

    public TransactionForm getTransactionForm() {
        return transactionForm;
    }

    public void setTransactionForm(TransactionForm transactionForm) {
        this.transactionForm = transactionForm;
        institutionalPanel.fillValue(this.transactionForm);
    }

    public void setCustomer(Customer customer) {
        this.customer = customer;

        if (this.customer != null) {
            refreshTransactionFormTable(SearchController.getInstance().findByClientNo(this.customer.getClientNo()));
        }
    }

    public void refreshCustomerTable(List<Customer> c) {
        customers.clear();
        customers.addAll(c);
        if (!customers.isEmpty()) {
            lblRecordCount.setText("RECORD(S): " + customers.size());
            tblCustomer.setRowSelectionInterval(0, 0);
        }
    }

    public void refreshTransactionFormTable(List<TransactionForm> t) {
        transactionForms.clear();
        transactionForms.addAll(t);
        if (!transactionForms.isEmpty()) {
            tblTransactionForm.setRowSelectionInterval(0, 0);
        }
    }

    @Override
    public JasperPrint printNow() throws Exception {
        if (transactionForm != null) {
            return ReportController.getInstance().print(transactionForm.getTxFormNo());
        } else {
            return null;
        }
    }
}
